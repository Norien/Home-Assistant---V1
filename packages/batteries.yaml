################################################################
## Packages / Batteries
## Any sensor with the prefix sensor.battery_ will auto add to group and send notify when low.
## Dependices: Custom Component in use for generating the battery group.
## https://github.com/Norien/Home-Assistant-Config/blob/master/custom_components/group_globber.py
################################################################
homeassistant:
  customize:
    sensor.battery_low:
      hidden: true

automation:
  - alias: 'Battery Alert'
    initial_state: 'on'
    trigger:
      - platform: time
        at: '10:00:00'
      - platform: time
        at: '18:00:00'
    condition:
      condition: template
      value_template: "{% if states('sensor.battery_low') == '' %}false{%else%}true{% endif %}"
    action:
      - service: persistent_notification.create
        data_template:
          title: Low Battery
          message: "{{ states('sensor.battery_low') }}"
          notification_id: low-battery-alert

sensor:
###### DUMMY SENSOR FOR NEST PROTECT TO NOTIFY
  - platform: template
    sensors:
      battery_nest_protect_kitchen:
        friendly_name: 'Kitchen Nest Protect'
        unit_of_measurement: '%'
        value_template: >-
          {% set battery = states.sensor.kitchen_nest_protect_battery_health.state %}
          {% if battery == 'Ok' %}100{% else %}0{% endif %}
        icon_template: >-
          {% set battery = states.sensor.kitchen_nest_protect_battery_health.state %}
          {% if battery == 'Ok' %}mdi:battery{% else %}mdi:battery-alert{% endif %}

###### PHILIPS HUE MOTION SENSOR AND SWITCHES
  - platform: rest
    resource: !secret finn_room_sensor_battery
    value_template: '{{ value_json.config.battery }}'
    unit_of_measurement: '%'
    scan_interval: 1800
    name: 'batteryraw_finn_sensor'
  - platform: template
    sensors:
      battery_finn_sensor_dynamic:
        friendly_name: 'Findlays Room Sensor'
        value_template: "{{ states.sensor.batteryraw_finn_sensor.state }}"
        unit_of_measurement: '%'
        icon_template: >-
          {% set battery_level = states.sensor.batteryraw_finn_sensor.state|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
          {% endif %}

  - platform: rest
    resource: !secret finn_room_switch_battery
    value_template: '{{ value_json.config.battery }}'
    unit_of_measurement: '%'
    scan_interval: 1800
    name: 'batteryraw_finn_switch'
  - platform: template
    sensors:
      battery_finn_switch_dynamic:
        friendly_name: 'Findlays Room Switch'
        value_template: "{{ states.sensor.batteryraw_finn_switch.state }}"
        unit_of_measurement: '%'
        icon_template: >-
          {% set battery_level = states.sensor.batteryraw_finn_switch.state|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
          {% endif %}

  - platform: rest
    resource: !secret livingroom_sensor_battery
    value_template: '{{ value_json.config.battery }}'
    unit_of_measurement: '%'
    scan_interval: 1800
    name: 'batteryraw_livingroom_sensor'
  - platform: template
    sensors:
      battery_livingroom_sensor_dynamic:
        friendly_name: 'Living Room Sensor'
        value_template: "{{ states.sensor.batteryraw_livingroom_sensor.state }}"
        unit_of_measurement: '%'
        icon_template: >-
          {% set battery_level = states.sensor.batteryraw_livingroom_sensor.state|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
          {% endif %}

  - platform: rest
    resource: !secret livingroom_switch_battery
    value_template: '{{ value_json.config.battery }}'
    unit_of_measurement: '%'
    scan_interval: 1800
    name: 'batteryraw_hallway_switch'
  - platform: template
    sensors:
      battery_hallway_switch_dynamic:
        friendly_name: 'Hallway Switch'
        value_template: "{{ states.sensor.batteryraw_hallway_switch.state }}"
        unit_of_measurement: '%'
        icon_template: >-
          {% set battery_level = states.sensor.batteryraw_hallway_switch.state|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
          {% endif %}

  - platform: rest
    resource: !secret dining_room_sensor_battery
    value_template: '{{ value_json.config.battery }}'
    unit_of_measurement: '%'
    scan_interval: 1800
    name: 'batteryraw_diningroom_sensor'
  - platform: template
    sensors:
      battery_diningroom_sensor_dynamic:
        friendly_name: 'Dining Room Sensor'
        value_template: "{{ states.sensor.batteryraw_diningroom_sensor.state }}"
        unit_of_measurement: '%'
        icon_template: >-
          {% set battery_level = states.sensor.batteryraw_diningroom_sensor.state|int('unknown') %}
          {% set battery_round = (battery_level|int / 10)|int * 10 %}
          {% if battery_level == 'unknown' %}
            mdi:battery-unknown
          {% else %}
          {% if battery_round >= 100 %}
            mdi:battery
          {% elif battery_round > 0 %}
            mdi:battery-{{ battery_round }}
          {% else %}
            mdi:battery-alert
          {% endif %}
          {% endif %}

  - platform: template
    sensors:
      justin_battery_template:
        friendly_name: Justin Phone Battery
        unit_of_measurement: '%'
        value_template: "{{ states.device_tracker.life360_justin.attributes.battery |int(-1) }}"
        icon_template: >-
          {% if states.device_tracker.life360_justin.attributes.battery != "unknown" %}
            {% set battery_level = states.device_tracker.life360_justin.attributes.battery|int (-1)%}
            {% set battery_round = (battery_level|int / 10)|int * 10 %}
            {% if states.device_tracker.life360_justin.attributes.battery_charging|lower == "true" %}
              {% if battery_level == -1 %}
                mdi:battery-unknown
              {% else %}
                {% if battery_round >= 100 %}
                  mdi:battery-charging-100
                {% elif battery_round > 0 %}
                  mdi:battery-charging-{{ battery_round }}
                {% else %}
                  mdi:battery-alert
                {% endif %}
              {% endif %}
            {% else %}
              {% if battery_level == -1 %}
                mdi:battery-unknown
              {% else %}
                {% if battery_round >= 100 %}
                  mdi:battery
                {% elif battery_round > 0 %}
                  mdi:battery-{{ battery_round }}
                {% else %}
                  mdi:battery-alert
                {% endif %}
              {% endif %}
            {% endif %}
          {% else %}
            mdi:battery-alert
          {% endif %}
      nicole_battery_template:
        friendly_name: Nicole Phone Battery
        unit_of_measurement: '%'
        value_template: "{{ states.device_tracker.life360_nicole.attributes.battery |int(-1) }}"
        icon_template: >-
          {% if states.device_tracker.life360_nicole.attributes.battery != "unknown" %}
            {% set battery_level = states.device_tracker.life360_nicole.attributes.battery|int (-1)%}
            {% set battery_round = (battery_level|int / 10)|int * 10 %}
            {% if states.device_tracker.life360_nicole.attributes.battery_charging|lower == "true"  %}
              {% if battery_level == -1 %}
                mdi:battery-unknown
              {% else %}
                {% if battery_round >= 100 %}
                  mdi:battery-charging-100
                {% elif battery_round > 0 %}
                  mdi:battery-charging-{{ battery_round }}
                {% else %}
                  mdi:battery-alert
                {% endif %}
              {% endif %}
            {% else %}
              {% if battery_level == -1 %}
                mdi:battery-unknown
              {% else %}
                {% if battery_round >= 100 %}
                  mdi:battery
                {% elif battery_round > 0 %}
                  mdi:battery-{{ battery_round }}
                {% else %}
                  mdi:battery-alert
                {% endif %}
              {% endif %}
            {% endif %}
          {% else %}
            mdi:battery-alert
          {% endif %}

###### LIST OF LOW BATTERIES ( sensor.battery_ )
  - platform: template
    sensors:
      battery_low:
        friendly_name: 'Low Battery'
        icon_template: mdi:battery-alert
        entity_id:
          - sensor.battery_diningroom_sensor_dynamic
          - sensor.battery_finn_sensor_dynamic
          - sensor.battery_finn_switch_dynamic
          - sensor.battery_hallway_switch_dynamic
          - sensor.battery_livingroom_sensor_dynamic
          - sensor.battery_nest_protect_kitchen
          - sensor.battery_roomba
        value_template: >-
          {%- for item in states.sensor if ((item.entity_id[0:15] == 'sensor.battery_' and item.state|int <= 10 and item.name != 'Low Battery' and item.state != 'None')) -%}
            {{item.name}}
          {%- if not loop.last -%}
          {{', '}}
            {%- endif -%}
          {%- endfor -%}
      batterystatus:
        friendly_name: 'Low Battery Status'
        icon_template: mdi:battery-alert
        entity_id:
          - sensor.battery_low
        value_template: >-
          {% set battery = states.sensor.battery_low.state %}
          {% if battery == '' %}
            Low Battery
          {% else %}
            {{battery}}
          {% endif %}
