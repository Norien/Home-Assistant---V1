################################################################
## Packages / Good Morning
################################################################
homeassistant:
  customize:
    script.good_morning:
      emulated_hue_hidden: false
      emulated_hue_name: "Good Morning"
      friendly_name: Good Morning
      icon: mdi:emoticon-poop

google_assistant:
  entity_config:
    script.good_morning:
      expose: true
      name: 'Good Morning'

sensor:
  - platform: template
    sensors:
      good_night_morning_button:
        entity_id: sensor.time, script.morning_livingroom_lights
        friendly_name: 'good_night_morning_button'
        value_template: >
          {%-set trigger= states('sensor.good_morning_last_triggered')-%}
          {%-set now = as_timestamp(now())-%}
          {%-set time = states.sensor.time.state-%}
          {%-if time >= '06:00' and time <= '11:00' and now|float-trigger|float > 25200 -%}
            morning
          {%- elif time >= '20:30' and time <= '24:00' -%}
            night
          {%- else -%}
            nothing
          {%- endif -%}

### CREATE SENSOR FROM MQTT DATA
  - platform: mqtt
    name: good_morning_last_triggered
    state_topic: "homeassistant/good_morning"
    force_update: on

  - platform: rest
    name: quote_of_the_day
    resource: http://api.forismatic.com/api/1.0/?method=getQuote&format=json&lang=en
    value_template: '{{ value_json.quoteText }}'
    scan_interval: 43200

script:
  good_morning:
    sequence:
    - condition: time
      after: '06:00:00'
      before: '13:00:00'
### PUSH MQTT DATA FOR RETAINED TIMESTAMP
    - service: mqtt.publish
      data_template:
        topic: "homeassistant/good_morning"
        retain: true
        payload_template: "{{as_timestamp(now())}}"
    - service: script.nightlight_off
    - service: switch.turn_off
      entity_id: switch.sleep_finn
    - service: script.morning_livingroom_lights
    - service: switch.turn_off
      entity_id: switch.bedroom_fan
    - service: switch.turn_off
      entity_id: switch.white_noise_living_room
    - service: media_player.turn_off
      entity_id: media_player.master_bedroom_speaker
    - service: media_player.volume_set
      data:
        entity_id: media_player.google_home
        volume_level: '0.70'
    - wait_template: "{{ states.binary_sensor.living_room_sensor_motion.state == 'on' }}"
    - service: script.good_morning_tts
    - service: automation.turn_on
      entity_id: automation.night_light

  good_morning_tts:
    sequence:
     - service: script.janet_speech_engine
       data_template:
         CustomMessage: >-
           {% set weather = states('sensor.weather_report') %}
           {%- if states.sensor.holiday_data.state != "" -%}
           Today is {{ states.sensor.holiday.state }},
           {%- else -%}
           Good Morning,
           {%- endif -%}
           {{weather}}
           {%- if as_timestamp(now())|timestamp_custom('%A %B %d', True) == states.sensor.waste_pickup_garbage_recycling.state -%}
           The garbage is to go out this evening.
           {%-else-%}
           {{' '}}The next garbage pickup is on {{states('sensor.waste_pickup_garbage_recycling')}}.{{' '}}
           {%-endif-%}
           {%- if is_state('sensor.nicole', 'not_home') -%}
           {% elif is_state('sensor.nicole', 'home') %}
             {% if is_state('binary_sensor.workday_sensor', 'off') %}
             {% elif is_state('binary_sensor.workday_sensor', 'on') %}
               {% if 'rain' in states.sensor.dark_sky_hourly_summary.state %}
               Don't forget your Umbrella.
               {% else %}
               {% endif %}
               {% endif %}
               {%- endif -%}
               {%- if is_state("sensor.quote_of_the_day", "unknown") -%}
               Do or do not. There is no Try.
               {%- else -%}
               {{states.sensor.quote_of_the_day.state}}
               {%- endif %}

  morning_livingroom_lights:
    sequence:
    - condition: and
      conditions:
        - condition: numeric_state
          entity_id: 'sensor.living_room_sensor_light_level'
          below: 45
    - service: homeassistant.turn_on
      data:
        entity_id:
          - group.lr_lights
        brightness: 255
        rgb_color: [255,255,255]
        transition: 900
