################################################################
## Packages / Weather
## Dependencies: DARKSKY - https://darksky.net/dev/
##               WUNDERGROUND - https://home-assistant.io/components/sensor.wunderground/
################################################################
homeassistant:
  customize:
    #DARKSKY
    sensor.dark_sky_apparent_temperature:
      friendly_name: 'Current Temperature'
      icon: mdi:thermometer
    sensor.dark_sky_daytime_high_apparent_temperature_0:
      friendly_name: 'Daily High'
      icon: mdi:thermometer
    sensor.dark_sky_overnight_low_apparent_temperature_0:
      friendly_name: 'Daily Low'
      icon: mdi:thermometer
    sensor.dark_sky_humidity:
      friendly_name: 'Current Humidity'
    sensor.dark_sky_temperature:
      friendly_name: 'Current Temperature'
    sensor.dark_sky_daily_summary:
      friendly_name: 'Daily Summary'
    # WEATHER report
    script.weather_report:
      friendly_name: 'Weather Report'
      emulated_hue_hidden: false
      google_assistant: true
      google_assistant_name: 'Weather Report'

weather:
  - platform: openweathermap
    api_key: !secret openweathermap
    name: openweathermap

openuv:
  api_key: !secret openuv
  sensors:
    monitored_conditions:
      - current_ozone_level
      - current_uv_index
      - current_uv_level
      - max_uv_index

sensor:
  ## Custom Weather Report
  - platform: template
    sensors:
      weather_report:
        value_template: >
          The weather is {{states('sensor.dark_sky_minutely_summary')[:-1]|lower}} and {{states('sensor.dark_sky_apparent_temperature') | round}} degrees. Today's high is {{states('sensor.dark_sky_daytime_high_apparent_temperature_0')| round}} with a low of {{states('sensor.dark_sky_overnight_low_apparent_temperature_0') | round}}.
###### UV HAS EXPIRED NEED TO FIND A NEW SOURCE
          # {%- if states.sensor.pws_uv.state|int == 0 -%}
          # {%- else -%}
          # {{' '}}The current UV index is {{states('sensor.pws_uv')}} with a burn time of {{states('sensor.uv_burn_time')}} minutes.
          # {%- endif -%}
      weather_inside_vs_outside:
        value_template: >
          {% if (states.sensor.average_whole_home.state | float) >  (states.sensor.dark_sky_apparent_temperature.state | float) %}
          true
          {% else %}
          false
          {% endif %}
###### DARKSKY
  - platform: darksky
    api_key: !secret darksky_api_key
    forecast:
      - 0
    monitored_conditions:
      - summary
      - icon
      - nearest_storm_distance
      - nearest_storm_bearing
      - precip_type
      - precip_intensity
      - precip_probability
      - temperature
      - apparent_temperature
      - dew_point
      #- wind_speed
      #- wind_bearing
      - cloud_cover
      - humidity
      #- pressure
      #- visibility
      - ozone
      - minutely_summary
      - hourly_summary
      - daily_summary
      - temperature_high
      - temperature_low
      - apparent_temperature_high
      - apparent_temperature_low
      - precip_intensity_max

#######  UV
# http://beautyinthebackcountry.com/2013/04/09/uv-index-and-spf-explained/
#   - platform: template
#     sensors:
#       uv_burn_time:
#         unit_of_measurement: Minutes
# ### SUB IN CORRECT VALUE FOR YOUR SKIN#################################################################################################################################
# ### Celtic"all babies and children" = 67Min // caucasian = 100Min // Central Europe = 200Min // south american = 200Min // Middle Eastern = 400Min // African = 500Min
#         value_template: >
#           {% if is_state('sensor.pws_uv', '0') %}
#             0
#           {% elif is_state('sensor.pws_uv', '-1') %}
#             0
#           {% elif is_state('sensor.pws_uv', 'unknown') %}
#             0
#           {% else %}
#             {{ (67 / states.sensor.pws_uv.state | float) | round }}
#           {% endif %}

script:
  weather_report:
    sequence:
    - service: tts.google_say
      data_template:
        entity_id: media_player.google_home
        message: >
          {{states('sensor.weather_report')}}
