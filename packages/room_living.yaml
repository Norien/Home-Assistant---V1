################################################################
## Packages / Livingroom
################################################################
homeassistant:
  customize:
    group.lr_lights:
      emulated_hue_hidden: false
      friendly_name: Lights
    switch.tv:
      icon: mdi:monitor
      friendly_name: TV
    switch.tv_custom:
      icon: mdi:monitor
      friendly_name: TV
    switch.receiver:
      icon: mdi:speaker
      friendly_name: Receiver
    automation.light_living_room_sunset:
      friendly_name: Sunset Lights
      icon: mdi:weather-sunset-down
    light.living_room:
      friendly_name: Lights
    script.lr_dimmed:
      emulated_hue_hidden: false
      friendly_name: 'Dimmed'
      icon: mdi:brightness-7
    script.lr_relax:
      emulated_hue_hidden: false
      friendly_name: 'Relax'
      icon: mdi:brightness-6
    script.lr_read:
      emulated_hue_hidden: false
      friendly_name: 'Read'
      icon: mdi:brightness-5
    script.lr_concentrate:
      emulated_hue_hidden: false
      friendly_name: 'Bright'
      icon: mdi:star-circle
    script.lr_springblossom:
      emulated_hue_hidden: false
      friendly_name: 'Spring blossom'
      icon: mdi:flower
    script.beach:
      emulated_hue_hidden: false
      friendly_name: 'Beach'
      icon: mdi:beach
    script.river:
      friendly_name: 'River'
      icon: mdi:fire
    script.kitchen_sink_bright:
      emulated_hue_hidden: false
      friendly_name: 'Kitchen Sink Bright'
      icon: mdi:flower
    script.tv:
      emulated_hue_hidden: false
      emulated_hue_name: "TV"
      google_assistant: true
      google_assistant_name: "TV"
      friendly_name: TV
    binary_sensor.door_front:
      device_class: door
    binary_sensor.door_side:
      device_class: door
    binary_sensor.door_back:
      device_class: door

group:
  lr_lights:
    name: Lights
    icon: mdi:lightbulb
    entities:
     - light.living_room_lamp
     - light.kitchen_sink
     - light.hue_color_lamp_1
     - light.hue_color_lamp_3
     - light.hue_go

script:
### PLEX to KODI on LR TV
  plex_finn:
    sequence:
      - service: media_player.play_media
        entity_id: media_player.plex_kodi
        data:
          media_content_type: Video
          media_content_id:  '{ "library_name" : "Television Children", "shuffle": "1" }'

  tv:
    sequence:
      - service_template: >
          {% if states.switch.tv.state == 'off' %} switch.turn_on
          {% elif states.switch.tv.state == 'on' %} switch.turn_off
          {% endif %}
        data:
          entity_id: switch.tv, switch.receiver
      - service: media_player.media_stop
        data:
          entity_id: media_player.kodi_livingroom

  light_living_room_off:
    sequence:
      - service: light.turn_off
        data:
          entity_id: group.lr_lights
      - service: light.turn_off
        data:
          entity_id: group.lr_lights
      - service: input_select.select_option
        data:
          entity_id: input_select.light_living_room_scene
          option: "off"

  kitchen_sink_bright:
    sequence:
      - service: light.turn_on
        data:
          entity_id:
            light.kitchen_sink:
          brightness: 255
          rgb_color: [255,241,199]
  lr_dimmed:
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.light_living_room_scene
          option: "Dimmed"
      - service: light.turn_on
        data:
          entity_id: group.lr_lights
          brightness: 77
          rgb_color: [174,140,79]
  lr_relax:
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.light_living_room_scene
          option: "Relax"
      - service: light.turn_on
        data:
          entity_id: group.lr_lights
          brightness: 144
          rgb_color: [243,179,80]
  lr_read:
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.light_living_room_scene
          option: "Read"
      - service: light.turn_on
        data:
          entity_id: group.lr_lights
          brightness: 254
          rgb_color: [255,211,130]
  lr_concentrate:
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.light_living_room_scene
          option: "Bright"
      - service: light.turn_on
        data:
          entity_id:
            - group.lr_lights
          brightness: 255
          rgb_color: [255,255,255]
  lr_springblossom:
    sequence:
      - service: input_select.select_option
        data:
          entity_id: input_select.light_living_room_scene
          option: "Spring Blossom"
      - service: light.turn_on
        data_template:
          entity_id: >-
            {%- for state in states.group.lr_lights.attributes.entity_id -%}
            {{- ","if not loop.first-}}{{ state }}{{-endif-}}
            {%- endfor -%}
          brightness: 255
          rgb_color: ['{{ "{0:d}".format(range(210, 238)|random) }}' , '{{ "{0:d}".format(range(100, 132)|random) }}', '{{ "{0:d}".format(range(240, 255)|random) }}']
  beach:
    sequence:
      - service: hue.hue_activate_scene
        data:
          group_name: "Living Room"
          scene_name: "Beach"
      - service: input_select.select_option
        data:
          entity_id: input_select.light_living_room_scene
          option: "Beach"
  river:
    sequence:
      - service: hue.hue_activate_scene
        data:
          group_name: "Living Room"
          scene_name: "river"
      - service: input_select.select_option
        data:
          entity_id: input_select.light_living_room_scene
          option: "River"

automation:
  - alias: 'turn_tv_off'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: media_player.kodi_livingroom
        from: 'playing'
        to: 'idle'
        for:
          minutes: 15
    condition:
      - condition: state
        entity_id: 'media_player.kodi_livingroom'
        state: 'idle'
    action:
      - service: switch.turn_off
        entity_id: switch.tv, switch.receiver

  - alias: 'light_living_room_sunset'
    initial_state: 'on'
    trigger:
      - platform: sun
        event: sunset
    condition:
      - condition: state
        entity_id: 'input_boolean.away'
        state: 'off'
      - condition: state
        entity_id: 'switch.living_room_pc'
        state: 'on'
      - condition: state
        entity_id: 'light.living_room_lamp'
        state: 'off'
    action:
      - service: hue.hue_activate_scene
        data:
          group_name: "Living Room"
          scene_name: "Spring blossom"
      - service: input_select.select_option
        data:
          entity_id: input_select.light_living_room_scene
          option: "Spring Blossom"

  - alias: 'light_living_room_scene'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: input_select.light_living_room_scene
    action:
      service: script.turn_on
      data_template:
        entity_id: >-
          {% if is_state("input_select.light_living_room_scene", "off") %} script.light_living_room_off
          {% elif is_state("input_select.light_living_room_scene", "Bright") %} script.lr_concentrate
          {% elif is_state("input_select.light_living_room_scene", "Read") %} script.lr_read
          {% elif is_state("input_select.light_living_room_scene", "Relax") %} script.lr_relax
          {% elif is_state("input_select.light_living_room_scene", "Dimmed") %} script.lr_dimmed
          {% elif is_state("input_select.light_living_room_scene", "Spring Blossom") %} script.lr_springblossom
          {% elif is_state("input_select.light_living_room_scene", "Beach") %} script.beach
          {% elif is_state("input_select.light_living_room_scene", "River") %} script.river
          {% endif %}

  - alias: 'light_living_room_scene'
    initial_state: 'on'
    trigger:
      - platform: state
        entity_id: light.living_room
        to: "off"
    action:
      - service: input_select.select_option
        data:
          entity_id: input_select.light_living_room_scene
          option: "off"

  - alias: 'light_living_room_off'
    initial_state: 'on'
    trigger:
      - platform: numeric_state
        entity_id: 'sensor.living_room_lux'
        above: 45
    action:
      - service: light.turn_off
        data:
          entity_id: group.lr_lights

input_select:
  light_living_room_scene:
    name: Scene
    options:
      - "off"
      - "Bright"
      - "Read"
      - "Relax"
      - "Dimmed"
      - "Spring Blossom"
      - "Beach"
      - "River"
    initial: "off"
    icon: mdi:ceiling-light

######
switch:
  - platform: template
    switches:
      tv_custom:
        value_template: '{{ states.switch.tv.state }}'
        turn_on:
          service: switch.turn_on
          entity_id: switch.tv, switch.receiver
        turn_off:
          - service: switch.turn_off
            entity_id: switch.tv, switch.receiver
          - service: media_player.media_stop
            data:
              entity_id: media_player.kodi_livingroom
###### SONOFF DUAL 1
  - platform: mqtt
    name: "tv"
    state_topic: "stat/sonoff_dual/POWER1"
    command_topic: "cmnd/sonoff_dual/POWER1"
    payload_on: "ON"
    payload_off: "OFF"
    optimistic: false
    qos: 0
    retain: true
###### SONOFF DUAL 2
  - platform: mqtt
    name: "receiver"
    state_topic: "stat/sonoff_dual/POWER2"
    command_topic: "cmnd/sonoff_dual/POWER2"
    payload_on: "ON"
    payload_off: "OFF"
    optimistic: false
    qos: 0
    retain: true
