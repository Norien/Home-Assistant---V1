################################################################
## Packages / Server Status
## Dependencies / Glances - https://nicolargo.github.io/glances/
################################################################
homeassistant:
  customize:
    sensor.cpu_temperature:
      friendly_name: CPU Temperature
      icon: mdi:thermometer
    sensor.ha_version:
      friendly_name: Home Assistant Version
    sensor.glances_cpu_load:
      friendly_name: CPU Usage
      icon: mdi:desktop-tower
    sensor.glances_disk_overview:
      friendly_name: Disk
      icon: mdi:harddisk
    sensor.disk_temperature:
      friendly_name: Disk Temperature
      icon: mdi:thermometer
    sensor.glances_ram_overview:
      friendly_name: RAM
      icon: mdi:chip
    sensor.linux_distro:
      friendly_name: Linux Distro
      icon: mdi:ubuntu
    sensor.disk_file_system:
      friendly_name: File System
      icon: mdi:harddisk

script:
  restart_hass:
    sequence:
      - service: shell_command.restart_hass

weblink:
  entities:
    - name: Release Log
      url: https://github.com/home-assistant/home-assistant/releases/latest

sensor:
  - platform: github
    access_token: !secret github_access_token
    repositories:
      - path: 'Norien/Home-Assistant-Config'
  - platform: template # Breakout Stars and issue count
    sensors:
      home_assistant_config_issues:
        value_template: "{{states.sensor.home_assistant_config.attributes.open_issues}}"
      home_assistant_config_stars:
        value_template: "{{states.sensor.home_assistant_config.attributes.stargazers}}"
###### VERSIONS CUSTOM COMPONENT
  - platform: command_line
    name: Installed Version
    command: "cat /config/.HA_VERSION"
## VERSION ( DOCKER )
  - platform: version
    source: docker
## DATABASE % CONFIG SIZE
  - platform: command_line
    name: database_home_assistant
    command: du -sh /docker/database-home_assistant/ | awk '{print $1}' | head -c-2
    unit_of_measurement: 'GB'
  - platform: command_line
    name: config
    command: du -sh /config/ | awk '{print $1}'
###### CUSTOM HA/Version
  - platform: template
    sensors:
      ha_version:
        value_template: "{%- if states.sensor.latest_version.state == states.sensor.installed_version.state-%}{{states.sensor.installed_version.state}} {%-else-%}{{states.sensor.latest_version.state}} Available{%-endif-%}"
        icon_template: >-
          {% if states.sensor.latest_version.state == states.sensor.installed_version.state %}
            mdi:checkbox-marked
          {% else %}
            mdi:checkbox-blank-outline
          {% endif %}
###### SENSOR FOR CONDITIONAL CARD ( CUSTOM COMPONENT AND CARD VERSIONS )
      custom_update_available:
        value_template: >
          {%-set card=states('sensor.custom_card_tracker')-%}
          {%-set component=states('sensor.custom_component_tracker')-%}
          {%- if card|int != 0|int or component|int != 0|int -%}on{%-else-%}off{%-endif-%}
###### CUSTOM LINUX VERSION
  - platform: command_line
    command: cat /config/www/linux_distro
    name: 'linux_distro'
    scan_interval: 604800

###### UPTIMES
  - platform: uptime
    name: 'HA Uptime'

  - platform: command_line
    command: curl -X GET http://127.0.0.1:61208/api/3/uptime
    name: 'Server Uptime'
    value_template: '{{ value[1:-1] }}'
    scan_interval: 720

###### CPU TEMPERATURE
  - platform: command_line
    name: CPU Temperature
    command: curl -X GET http://127.0.0.1:61208/api/3/sensors
    unit_of_measurement: 'Â°C'
    value_template: '{{ value_json[8].value }}'
###### CPU SPEED
  - platform: cpuspeed
    name: 'CPU Speed'
###### CPU LOAD
  - platform: command_line
    command: curl -X GET http://127.0.0.1:61208/api/3/load
    name: 'glances_cpu_load'
    value_template: '{{ value_json.min5 }}'
    unit_of_measurement: '%'
    scan_interval: 300

###### GLANCES
  - platform: glances
    host: 127.0.0.1
    version: 3
    resources:
      - 'disk_free'
      - 'disk_use'
      - 'memory_use'
      - 'memory_free'

###### HARD DRIVE DISPLAY
  - platform: command_line
    command: curl -X GET http://127.0.0.1:61208/api/2/fs
    name: 'glances_disk_total'
    value_template: '{{ value_json[0].size }}'
    scan_interval: 604800
###### PYSICAL DRIVE %
  - platform: command_line
    command: df -h / | awk '{print $5}' | grep -v -e "Use%" | sed 's/.$//'
    name: 'Disk File System'
    scan_interval: 3600
    unit_of_measurement: '%'

##### CUSTOM RAM DISPLAY
  - platform: command_line
    command: curl -X GET http://127.0.0.1:61208/api/3/mem/total
    name: 'glances_ram_total'
    value_template: '{{ value_json.total }}'
    scan_interval: 604800

  - platform: template
    sensors:
      glances_ram_used_gb:
        value_template: '{{(states.sensor.glances_ram_used.state|float/1000)|round(1)}}'
        unit_of_measurement: 'GB'

###### DOCKER CONTROL POINTS
switch:
  - platform: hadockermon
    host: 127.0.0.1
    port: 8126
  - platform: hadockermon
    host: 192.168.1.174
    port: 8126
input_boolean:
  docker_control:
    name: 'Docker Control'
    icon: mdi:docker

shell_command:
  restart_hass: curl -s http://127.0.0.1:8126/container/Home_Assistant/restart
